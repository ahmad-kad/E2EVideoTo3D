version: '3.8'

services:
  minio:
    image: minio/minio:RELEASE.2023-07-21T21-12-44Z
    container_name: e2e3d-minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-volume:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - e2e3d-network

  e2e3d-reconstruction:
    image: e2e3d-reconstruction:latest
    container_name: e2e3d-reconstruction
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - S3_ENABLED=true
      - S3_ENDPOINT=http://minio:9000
      - S3_BUCKET=models
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - QUALITY_PRESET=medium
    volumes:
      - ./data:/app/data
      - ./upload_mesh_to_minio.py:/app/upload_mesh_to_minio.py
    networks:
      - e2e3d-network
    command: >
      bash -c "
        echo 'Starting 3D reconstruction pipeline...'
        mkdir -p /app/data/output
        python /app/reconstruct.py /app/data/input/FrameSequence /app/data/output/FrameSequence
        
        # Install MinIO client and upload the mesh
        pip install minio
        chmod +x /app/upload_mesh_to_minio.py
        
        # Check if mesh file exists
        MESH_FILE=/app/data/output/FrameSequence/mesh/reconstructed_mesh.obj
        if [ -f \"$MESH_FILE\" ]; then
          echo 'Mesh file found, uploading to MinIO...'
          python /app/upload_mesh_to_minio.py \"$MESH_FILE\" --endpoint minio:9000
          echo 'Mesh upload completed'
        else
          echo 'Mesh file not found at '$MESH_FILE
          exit 1
        fi
        
        echo 'Reconstruction completed successfully'
      "

networks:
  e2e3d-network:
    driver: bridge

volumes:
  minio-volume: 